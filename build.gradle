// Copyright Â© 2016 Laurence Gonsalves
//
// This file is part of xenocom, a library which can be found at
// http://github.com/xenomachina/xenocom
//
// This library is free software; you can redistribute it and/or modify it
// under the terms of the GNU Lesser General Public License as published by the
// Free Software Foundation; either version 2.1 of the License, or (at your
// option) any later version.
//
// This library is distributed in the hope that it will be useful, but WITHOUT
// ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
// FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License
// for more details.
//
// You should have received a copy of the GNU Lesser General Public License
// along with this library; if not, see http://www.gnu.org/licenses/

buildscript {
    repositories {
        jcenter()
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "org.jetbrains.dokka:dokka-gradle-plugin:$dokka_version"
        classpath "com.jfrog.bintray.gradle:gradle-bintray-plugin:$gradle_bintray_version"
        classpath "net.researchgate:gradle-release:$gradle_release_version"
    }
}

apply plugin: 'com.jfrog.bintray'
apply plugin: 'net.researchgate.release'
apply plugin: 'maven'
apply plugin: 'kotlin'
apply plugin: 'java'
apply plugin: 'org.jetbrains.dokka'
apply plugin: 'maven-publish'

assert name == 'xenocom'
description = "Xenomachina's common support library."

group 'com.xenomachina'
project.ext {
    githubRepo = "xenomachina/$name"
    vcsUrl = "https://github.com/$githubRepo"
}

sourceCompatibility = 1.6

repositories {
    mavenCentral()
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"

    testCompile "io.kotlintest:kotlintest:$kotlintest_version"
    // This is to ensure that kotlintest uses the correct version of
    // kotlin-reflect
    testCompile "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
}

sourceSets {
    main.java.srcDirs += 'src/main/kotlin'
}

//////////////////////////////////////////////////////////////////////////////
// ktlint config
//////////////////////////////////////////////////////////////////////////////

// Based on https://github.com/shyiko/ktlint

configurations {
    ktlint
}

dependencies {
    ktlint "com.github.shyiko:ktlint:$ktlint_version"
}

task ktlint(type: JavaExec) {
    main = "com.github.shyiko.ktlint.Main"
    classpath = configurations.ktlint
    args "src/**/*.kt"
}

check.dependsOn ktlint

task ktlintFormat(type: JavaExec) {
    main = "com.github.shyiko.ktlint.Main"
    classpath = configurations.ktlint
    args "-F", "src/**/*.kt"
}


//////////////////////////////////////////////////////////////////////////////
// Dokka config
//////////////////////////////////////////////////////////////////////////////

dokka {
    moduleName = project.name

    // TODO: includes = ['Module.md']

    linkMapping {
        dir = "src/main/kotlin"
        url = "$project.ext.vcsUrl/blob/master/src/main/kotlin"
        suffix = "#L"
    }
    sourceDirs = files('src/main/kotlin')
}

task dokkaJavadoc(type: org.jetbrains.dokka.gradle.DokkaTask) {
    outputFormat = "javadoc"
    outputDirectory = javadoc.destinationDir

    linkMapping {
        dir = "src/main/kotlin"
        url = "$project.ext.vcsUrl/blob/master/src/main/kotlin"
        suffix = "#L"
    }
    sourceDirs = files('src/main/kotlin')
}


//Based on comment by @jnizet at https://github.com/Kotlin/dokka/issues/42
task javadocJar(type: Jar, dependsOn: dokkaJavadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

//////////////////////////////////////////////////////////////////////////////
// bintrayUpload config
//////////////////////////////////////////////////////////////////////////////

// Based on https://github.com/bintray/gradle-bintray-plugin
bintray {
  user = System.getenv('BINTRAY_USER')
  key = System.getenv('BINTRAY_KEY')

  pkg {
    repo = 'maven'
    name = project.name
    desc = project.description

    licenses = ['LGPL-2.1']
    vcsUrl = "$project.ext.vcsUrl"
    websiteUrl = "$project.ext.vcsUrl"
    issueTrackerUrl = "$project.ext.vcsUrl/issues"
    githubRepo = project.ext.githubRepo
    githubReleaseNotesFile = 'CHANGELOG.md'

    version {
      name = project.version
      desc = "$project.name version $project.version"
      released = new Date()
      vcsTag = "$project.version"
    }
  }

  publications = ['MyPublication']
}

// Create the pom configuration:
def pomConfig = {
    licenses {
        license {
            name "GNU Lesser General Public License, Version 2.1"
            url "https://www.gnu.org/licenses/old-licenses/lgpl-2.1.txt"
            distribution "repo"
        }
    }
    developers {
        developer {
            id "xenomachina"
            name "Laurence Gonsalves"

            // State-of-the art anti-scraper encryption. ;-)
            email "moc.anihcamonex@ecnerual".reverse()
        }
    }
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

// Create the publication with the pom configuration:
publishing {
    publications {
        MyPublication(MavenPublication) {
            from components.java
            artifact sourcesJar
            artifact javadocJar
            // We use default groupId, artifactId, and version

            pom.withXml {
                def root = asNode()
                root.appendNode('description', project.description)
                root.appendNode('name', project.name)
                root.appendNode('url', project.ext.vcsUrl)
                root.children().last() + pomConfig
            }
        }
    }
}

//////////////////////////////////////////////////////////////////////////////
// gradle-release plugin config
//////////////////////////////////////////////////////////////////////////////

// Based on https://github.com/researchgate/gradle-release

// This causes './gradlew release' to also upload release package to bintray.
afterReleaseBuild.dependsOn bintrayUpload
